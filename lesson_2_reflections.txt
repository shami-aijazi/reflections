-What happens when you intialize a repository? Why do you need to do that?
A .git file gets created that stores metadata about the repository. This allows you to do git things on the 
repo, like see logs, diffs, and commits.

-How is the staging area different from the working directory and the repository? What value do you think 
it offers?
The staging area is where you can add, view, and edit the files from your working directory before committing 
them to the repository.

-How can you use the staging area to make sure you have one commit per logical change?
By adding only the file(s) that was changed to the staging area, comparing it with the current directory and the repository, and committing only that change.

-What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches are useful in cases where you want to branch off from the main timeline. For instance, if you want to try an experimental feature or a new version of the project without disturbing the timeline of what already works. Branches also allow you to create different iterations in parallel

-How do the diagrams help you visualize the branch structure?
By allowing you to clearly see which branches currently exist in the repo, as well as the HEAD, and the which branch(es) are checked out.
